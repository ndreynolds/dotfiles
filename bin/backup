#!/bin/bash
#
# Backup selected directories to Amazon S3 using duplicity.
#
# Usage:
#   backup sync
#   backup restore /restore/path
#
# The following should be set up as environment variables:
#   $AWS_ACCESS_KEY_ID       (AWS access key)
#   $AWS_SECRET_ACCESS_KEY   (AWS secret access key)
#   $DUPLICITY_DIRS          ($PATH-like colon-separated string of directories)
#   $DUPLICITY_KEY           (symmetric encryption passphrase)
#   $DUPLICITY_BUCKET_ID     (AWS S3 bucket id)


: ${AWS_ACCESS_KEY_ID:?     "Need to set AWS_ACCESS_KEY_ID"}
: ${AWS_SECRET_ACCESS_KEY:? "Need to set AWS_SECRET_ACCESS_KEY"}
: ${DUPLICITY_DIRS:?        "Need to set DUPLICITY_DIRS"}
: ${DUPLICITY_KEY:?         "Need to set DUPLICITY_KEY"}
: ${DUPLICITY_BUCKET_ID:?   "Need to set DUPLICITY_BUCKET_ID"}


export PASSPHRASE=$DUPLICITY_KEY

if [ "$1" == "restore" ] && [ $# == 2 ]; then

  /usr/local/bin/duplicity restore "s3+http://$DUPLICITY_BUCKET_ID" $2

elif [ "$1" == "sync" ]; then

  INCLUDES=
  IFS=: read -a DIRS <<< "$DUPLICITY_DIRS"
  for dir in "${DIRS[@]}"; do
    echo "Including: $dir"
    INCLUDES="$INCLUDES --include $dir"
  done

  ulimit -n 1024

  /usr/local/bin/duplicity $INCLUDES --exclude '**' --exclude '/.*' --volsize 250 \
    --allow-source-mismatch --full-if-older-than 30D / "s3+http://$DUPLICITY_BUCKET_ID" 

else

  echo "Usage:"
  echo "  backup sync"
  echo "  backup restore /restore/path"

fi
