#!/usr/bin/env ruby

DOTFILES = File.absolute_path(File.dirname(File.dirname(__FILE__)))
EXCLUDES = [
  '.',
  '..',
  '.git',
  '.gitignore',
  'README.md'
]

$should_link = []

def populate_should_link
  $should_link = Dir.glob(File.join(DOTFILES, '{*,.*}'))
    .delete_if { |f| File.directory?(f) }
    .map { |f| File.basename(f) }
  EXCLUDES.each { |e| $should_link.delete(e) }
end

def warn_unlinked
  if $should_link.any?
    puts "The following files were found, but not linked: "
    $should_link.each do |f|
      puts "  #{f}"
    end
    puts "If they do not need to be linked, add them to the exclusions"
  end
end

def link(src, dst)
  $should_link.delete(dst[1..-1])
  if File.symlink?(File.join(Dir.home, dst))
    File.delete(File.join(Dir.home, dst))
  end
  File.symlink(File.join(DOTFILES, src), File.join(Dir.home, dst))
end

`mkdir -p ~/.config/fish`
`mkdir -p ~/.config/nvim`

populate_should_link

link "bash_profile",                ".bash_profile"
link "bashrc",                      ".bashrc"
link "emacs",	                    ".emacs"
link "fish/config.fish",            ".config/fish/config.fish"
link "ghci",                        ".ghci"
link "git_template",                ".git_template"
link "gitconfig",                   ".gitconfig"
link "gitignore_global",            ".gitignore_global"
link "hgrc",                        ".hgrc"
link "jshintrc",                    ".jshintrc"
link "profile",                     ".profile"
link "rubocop.yml",                 ".rubocop.yml"
link "slate",                       ".slate"
link "tmux.conf",                   ".tmux.conf"
link "vim",                         ".vim"
link "vim/vimrc",                   ".vimrc"
link "vim",                         ".config/nvim"
link "vim/vimrc",                   ".config/nvim/init.vim"
link "zsh/zshrc",                   ".zshrc"

warn_unlinked
